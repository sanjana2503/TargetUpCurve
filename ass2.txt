->CREATE TABLE job_grades (grade_level VARCHAR(2) PRIMARY KEY,lowest_sal NUMERIC,highest_sal NUMERIC);
->INSERT INTO job_grades (grade_level, lowest_sal, highest_sal) VALUES ('A', 1000, 2999), ('B', 3000, 6999),('C', 7000, 9999),('D', 10000, 14999),('E', 15000,  24999),('F', 25000, 40000);
1)SELECT e.last_name, d.department_id, d.department_name FROM EMPLOYEES e JOIN DEPARTMENTS d ON e.department_id = d.department_id;
3)SELECT e.last_name, d.department_name, l.location_id, l.city FROM EMPLOYEES e JOIN DEPARTMENTS d ON e.department_id = d.department_id JOIN LOCATIONS l ON d.location_id = l.location_id WHERE e.commission_pct IS NOT NULL;
4) SELECT e.last_name, d.department_name FROM EMPLOYEES e JOIN DEPARTMENTS d ON e.department_id = d.department_id WHERE e.last_name LIKE '%a%';
5)SELECT e.last_name, j.job_title, e.department_id, d.department_name FROM EMPLOYEES eJOIN JOBS j ON e.job_id = j.job_id JOIN DEPARTMENTS d ON e.department_id = d.department_id WHERE d.location_id = (SELECT location_id FROM LOCATIONS WHERE city = 'Toronto');
6)SELECT e1.last_name AS Employee, e1.employee_id AS "Emp#", e2.last_name AS Manager, e2.employee_id AS "Manager#" FROM EMPLOYEES e1 JOIN EMPLOYEES e2 ON e1.manager_id = e2.employee_id;
7)SELECT e1.last_name AS Employee, e1.employee_id AS "Emp#", e2.last_name AS Manager, e2.employee_id AS "Manager#" FROM EMPLOYEES e1LEFT JOIN EMPLOYEES e2 ON e1.manager_id = e2.employee_id ORDER BY e1.employee_id;
8)SELECT  e1.last_name AS "Employee Lastname",e1.department_id AS "Department Number",e2.last_name AS "Colleague Lastname" FROM EMPLOYEES e1 JOIN EMPLOYEES e2 ON e1.department_id = e2.department_id ORDER BY e1.last_name, e2.last_name;
9)SELECT e.first_name || ' ' || e.last_name AS "Employee Name",j.job_title AS "Job",d.department_name AS "Department Name",e.salary AS "Salary",
 jg.grade_level AS "Grade" FROM EMPLOYEES e JOIN JOBS j ON e.job_id = j.job_id JOIN DEPARTMENTS d ON e.department_id = d.department_id JOIN JOB_GRADES jg ON e.salary BETWEEN jg.lowest_sal AND jg.highest_sal ORDER BY e.last_name;
10)SELECT first_name || ' ' || last_name AS "Employee Name",hire_date FROM EMPLOYEES WHERE hire_date > (SELECT hire_date FROM EMPLOYEES WHERE last_name = 'Davies');
11)SELECT CONCAT(e1.first_name, ' ', e1.last_name) AS "Employee",e1.hire_date AS "Emp hired",CONCAT(e2.first_name, ' ', e2.last_name) AS "Manager",
e2.hire_date AS "Manager hired" FROM EMPLOYEES e1 JOIN EMPLOYEES e2 ON e1.manager_id = e2.employee_id WHERE e1.hire_date < e2.hire_date;
12)SELECT MAX(salary) AS "Maximum",MIN(salary) AS "Minimum",SUM(salary) AS "Sum",AVG(salary) AS "Average"FROM EMPLOYEES;
13)SELECT job_id,MAX(salary) AS "Maximum",MIN(salary) AS "Minimum",SUM(salary) AS "Sum",AVG(salary) AS "Average" FROM EMPLOYEES GROUP BY job_id;
14)SELECT job_id,COUNT(*) AS "Number of Employees" FROM EMPLOYEES GROUP BY job_id;
15)SELECT COUNT(DISTINCT manager_id) AS "Number of Managers" FROM EMPLOYEES;
16)SELECT (MAX(salary) - MIN(salary)) AS "Difference" FROM EMPLOYEES;
17)SELECT manager_id AS "Manager Number",MIN(salary) AS "Lowest Salary" FROM EMPLOYEES WHERE manager_id IS NOT NULL GROUP BY manager_id HAVING MIN(salary) >= 6000 ORDER BY "Lowest Salary" DESC;
18)SELECT d.department_name AS "Name",l.city AS "Location",COUNT(e.employee_id) AS "No. of People",ROUND(AVG(e.salary), 2) AS "Salary" FROM departments d
JOIN locations l ON d.location_id = l.location_id JOIN employees e ON d.department_id = e.department_id GROUP BY d.department_name, l.city;
19)SELECT e.last_name,e.hire_date FROM employees e WHERE e.department_id = (SELECT department_id FROM employees WHERE last_name = 'Zlotkey') AND e.last_name != 'Zlotkey';
20)SELECT employee_id,last_name FROM employees WHERE salary > (SELECT AVG(salary) FROM employees ORDER BY salary ASC;
21)SELECT employee_id,last_name FROM employees WHERE department_id IN (SELECT DISTINCT department_id FROM employees WHERElast_name LIKE '%u%');
22)SELECT e.last_name,e.department_id,e.job_id FROM employees e JOIN departments d ON e.department_id = d.department_id WHERE d.location_id = 1700;
23)SELECT e.last_name,e.salary FROM employees e JOIN employees m ON e.manager_id = m.employee_id WHERE m.last_name = 'King';
24)SELECT d.department_id,e.last_name,e.job_id FROM employees e JOIN departments d ON e.department_id = d.department_id WHERE d.department_name = 'Executive'
25)SELECT e.employee_id, e.last_name, e.salary FROM employees e JOIN departments d ON e.department_id = d.department_id WHERE e.salary > (SELECT AVG(salary) 
  FROM employees)AND d.department_id IN (SELECT DISTINCT department_id FROM employees WHERE last_name LIKE '%u%');
26)SELECT DISTINCT department_id FROM employees;
27) SELECT * FROM employees ORDER BY first_name DESC;
28)SELECT first_name, last_name, salary, (salary * 0.15) AS PF FROM employees;
29)SELECT employee_id, first_name, last_name, salary FROM employees ORDER BY salary ASC;
30)SELECT SUM(salary) AS total_salaries FROM employees;
31)SELECT MAX(salary) AS max_salary, MIN(salary) AS min_salary FROM employees;
32)SELECT AVG(salary) AS avg_salary, COUNT(*) AS num_employees FROM employees;
33)SELECT AVG(salary) AS avg_salary, COUNT(*) AS num_employeesFROM employees;
34)SELECT COUNT(DISTINCT job_id) AS num_jobs FROM employees;
35)SELECT UPPER(first_name) AS upper_first_name FROM employees;
36)SELECT SUBSTRING(first_name, 1, 3) AS first_three_characters FROM employees;
37)SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM employees;
38)SELECT TRIM(first_name) AS trimmed_first_nameFROM employees;
39)SELECT LENGTH(first_name) AS first_name_length, LENGTH(last_name) AS last_name_length FROM employees;
40)SELECT *FROM employees WHERE first_name REGEXP '[0-9]';
41)SELECT *FROM employees LIMIT 10;
42)SELECT first_name, last_name, ROUND(salary / 12, 2) AS monthly_salary FROM employees;
43)SELECT first_name, last_name, salary FROM employees WHERE salary < 10000 OR salary > 15000;
44)SELECT first_name, last_name, department_id FROM employees WHERE department_id IN (30, 100) ORDER BY department_id ASC;
45)SELECT first_name, last_name, salary FROM employees WHERE salary NOT BETWEEN 10000 AND 15000 AND department_id IN (30, 100);
46)SELECT first_name, last_name, hire_date FROM employees WHERE YEAR(hire_date) = 1987;
47)SELECT first_name FROM employees WHERE first_name LIKE '%b%' AND first_name LIKE '%c%';
48)SELECT last_name, job_id, salary FROM employees WHERE job_id IN ('Programmer', 'Shipping Clerk') AND salary NOT IN (4500, 10000, 15000);
49)SELECT last_name FROM employees WHERE LENGTH(last_name) = 6;
50)SELECT last_name FROM employees WHERE SUBSTRING(last_name, 3, 1) = 'e';
51)SELECT DISTINCT job_id FROM employees;
52)SELECT first_name, last_name, salary, salary * 0.15 AS PF FROM employees;
53)SELECT *FROM employees WHERE last_name IN ('BLAKE', 'SCOTT', 'KING', 'FORD');
54)SELECT COUNT(DISTINCT job_id) AS number_of_jobs FROM employees;
55)SELECT SUM(salary) AS total_salaries_payable FROM employees;
56)SELECT MIN(salary) AS min_salary FROM employees;
57)SELECT MAX(salary) AS max_programmer_salary FROM employees WHERE job_id = 'Programmer';
58)SELECT AVG(salary) AS average_salary, COUNT(*) AS num_employees FROM employees WHERE department_id = 90;
59)SELECT MAX(salary) AS highest_salary,MIN(salary) AS lowest_salary,SUM(salary) AS total_salary,AVG(salary) AS average_salary FROM employees;
60)SELECT job_id,COUNT(*) AS num_employees FROM employees GROUP BY job_id;
61)SELECT MAX(salary) - MIN(salary) AS salary_difference FROM employees;
62)SELECT manager_id, MIN(salary) AS lowest_salary FROM employees GROUP BY manager_id;
63)SELECT department_id,SUM(salary) AS total_salary_payable FROM employees GROUP BY department_id;
64)SELECT job_id,AVG(salary) AS average_salary FROM employees WHERE job_id != 'Programmer' GROUP BY job_id;
65)SELECT job_id,SUM(salary) AS total_salary,MAX(salary) AS max_salary,MIN(salary) AS min_salary,AVG(salary) AS avg_salary FROM employees WHERE department_id = 90 GROUP BY job_id;
66)SELECT job_id, MAX(salary) AS max_salary FROM employees GROUP BY job_id HAVING MAX(salary) >= 4000;
67)SELECT department_id, AVG(salary) AS average_salary FROM employees GROUP BY department_id HAVING COUNT(*) > 10;
68)SELECT first_name, last_name, salary FROM employees WHERE salary > (SELECT salary FROM employees WHERE last_name = 'Bull');
69)SELECT first_name, last_name FROM employees WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'IT');
70)SELECT first_name, last_name FROM employees WHERE manager_id IS NOT NULL AND department_id IN (SELECT department_id FROM departments WHERE location_id IN (SELECT location_id FROM locations WHERE country_id = 'US'));
71)SELECT first_name, last_name FROM employees WHERE employee_id IN (SELECT DISTINCT manager_id FROM employees);
72)SELECT first_name, last_name, salary FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);
73)SELECT first_name, last_name, salary FROM employees e WHERE salary = (SELECT MIN(salary) FROM employees WHERE job_id = e.job_id);
74)SELECT first_name, last_name, salary FROM employees WHERE department_id IN (SELECT department_id FROM departments WHERE department_name LIKE 'IT%')
AND salary > (SELECT AVG(salary) FROM employees WHERE department_id IN (SELECT department_id FROM departments WHERE department_name LIKE 'IT%'));
75)SELECT first_name, last_name, salary FROM employees WHERE salary > (SELECT salary FROM employees WHERE last_name = 'Bell');
76)SELECT first_name, last_name, salary FROM employees WHERE salary = (SELECT MIN(salary) FROM employees);
77)SELECT first_name, last_name, salary FROM employees WHERE salary > (SELECT AVG(salary)FROM employees);
78)SELECT first_name, last_name, salary FROM employees WHERE salary > (SELECT MAX(salary) FROM employees WHERE job_id = 'SH_CLERK')ORDER BY salary;
79)
80)SELECT e.employee_id, e.first_name, e.last_name, d.department_name FROM employees e JOIN departments d ON e.department_id = d.department_id;
81)SELECT e.employee_id, e.first_name, e.last_name, e.salary FROM employees e WHERE e.salary > (SELECT AVG(salary)FROM employees WHERE department_id = e.department_id);
82)SELECT employee_id, first_name, last_name, salary FROM (SELECT *, (@row_number:=@row_number + 1) AS row_num FROM employees, (SELECT @row_number:=0) AS r
) AS RankedEmployees WHERE row_num % 2 = 0;
83)SELECT DISTINCT salary FROM employeesORDER BY salary DESC LIMIT 4, 1;
84)SELECT DISTINCT salary FROM employees ORDER BY salary ASC LIMIT 3, 1;
85)SELECT *FROM employees ORDER BY EMPLOYEE_ID DESC LIMIT 10;
86)SELECT d.department_id, d.department_name FROM departments d LEFT JOIN employees e ON d.department_id = e.department_id WHERE e.employee_id IS NULL;
87)SELECT salary FROM employees ORDER BY salary DESC LIMIT 3;
88)SELECT salary FROM employees ORDER BY salary LIMIT 3;
89)SELECT DISTINCT salary FROM employees ORDER BY salary DESC LIMIT n-1, 1;
90)SELECT d.location_id, l.street_address, l.city, l.state_province, c.country_name FROM departments d JOIN locations l ON d.location_id = l.location_id
JOIN countries c ON l.country_id = c.country_id;
91)SELECT e.first_name, e.last_name, e.department_id, d.department_name FROM employees e JOIN departments d ON e.department_id = d.department_id;
92)SELECT e.first_name, e.last_name, e.job_id, e.department_id, d.department_name FROM employees e JOIN departments d ON e.department_id = d.department_id
WHERE d.location_id = (SELECT location_id FROM locations WHERE city = 'London');
93)SELECT e1.employee_id AS "Employee ID", e1.last_name AS "Employee Last Name",e1.manager_id AS "Manager ID", e2.last_name AS "Manager Last Name"
FROM employees e1 LEFT JOIN employees e2 ON e1.manager_id = e2.employee_id;
94)SELECT first_name, last_name, hire_date FROM employees WHERE hire_date > (SELECT hire_date FROM employees WHERE last_name = 'Jones');
95)SELECT department_name, COUNT(employee_id) AS num_employees FROM departments LEFT JOIN employees ON departments.department_id = employees.department_id
GROUP BY department_name;
96)SELECT e.employee_id, j.job_title, DATEDIFF(jh.end_date, jh.start_date) AS days_between FROM employees e JOIN jobs j ON e.job_id = j.job_id
JOIN job_history jh ON e.employee_id = jh.employee_id WHERE e.department_id = 90;
97)SELECT d.department_id, d.department_name, e.first_name AS manager_first_name FROM departments d JOIN employees e ON d.manager_id = e.employee_id;
98)SELECT d.department_name, CONCAT(m.first_name, ' ', m.last_name) AS manager_name, l.city FROM departments d JOIN employees m ON d.manager_id = m.employee_id JOIN locations l ON d.location_id = l.location_id;
99)SELECT job_title, AVG(salary) AS average_salary FROM employees JOIN jobs ON employees.job_id = jobs.job_id GROUP BY job_title;
100)SELECT jobs.job_title,CONCAT(employees.first_name, ' ', employees.last_name) AS employee_name,employees.salary - jg.lowest_salary AS salary_difference
FROM employees JOIN jobs ON employees.job_id = jobs.job_id JOIN (SELECT job_id, MIN(salary) AS lowest_salary FROM employees GROUP BY job_id) AS jg ON employees.job_id = jg.job_id;
101)SELECT jh.employee_id, jh.start_date,jh.end_date,jh.job_id,jh.department_id FROM job_history jh JOIN employees e ON jh.employee_id = e.employee_id
WHERE e.salary > 10000;
102)SELECT d.department_name,CONCAT(e.first_name, ' ', e.last_name) AS manager_name,e.hire_date,e.salary FROM departments d JOIN employees e ON d.manager_id = e.employee_id WHERE TIMESTAMPDIFF(YEAR, e.hire_date, CURDATE()) > 15;
103)SELECT first_name, hire_date FROM employees WHERE hire_date BETWEEN '1987-06-01' AND '1987-07-30';
104)SELECT first_name, last_name FROM employees WHERE MONTH(hire_date) = 6;
105)SELECT YEAR(hire_date) AS joining_year, COUNT(*) AS num_employees FROM employees GROUP BY joining_year HAVING num_employees > 10;
106)SELECT first_name FROM employees WHERE YEAR(hire_date) = 1987;
107)SELECT d.department_name, CONCAT(e.first_name, ' ', e.last_name) AS manager_name, e.salary FROM employees e JOIN departments d ON e.department_id = d.department_id WHERE e.job_id LIKE '%MAN%'  AND TIMESTAMPDIFF(YEAR, e.hire_date, CURDATE()) > 5;
108)SELECT e.employee_id, e.last_name, MIN(jh.start_date) AS first_salary_date FROM employees e JOIN job_history jh ON e.employee_id = jh.employee_id
GROUP BY e.employee_id, e.last_name;
109)SELECT first_name, hire_date, TIMESTAMPDIFF(YEAR, hire_date, CURDATE()) AS experience_years FROM employees;
110)SELECT department_id, YEAR(hire_date) AS year_joined, COUNT(*) AS num_employees_joined FROM employees GROUP BY department_id, YEAR(hire_date);
112)UPDATE employees SET phone_number = REPLACE(phone_number, '124', '999') WHERE phone_number LIKE '%124%';
113)SELECT * FROM employees WHERE LENGTH(first_name) >= 8;
114)SELECT LPAD(MAX(salary), 10, '0') AS max_salary_with_zeros,LPAD(MIN(salary), 10, '0') AS min_salary_with_zeros FROM employees;
115)UPDATE employees SET email = CONCAT(email, '@example.com');
116)SELECT employee_id, first_name, DATE_FORMAT(hire_date, '%M') AS hire_month FROM employees;
117)SELECT employee_id, LEFT(email, LENGTH(email) - 3) AS truncated_email FROM employees;
118)SELECT * FROM employees WHERE first_name = UPPER(first_name);
119)SELECT RIGHT(phone_number, 4) AS last_four_digits FROM employees;
122)SELECT job_title,SUBSTRING_INDEX(job_title, ' ', 1) AS first_word FROM jobs WHERE INSTR(job_title, ' ') > 0;
123)SELECT first_name,LENGTH(first_name) AS first_name_length FROM employees WHERE  INSTR(SUBSTRING(last_name, 3), 'c') > 0;
124)SELECT first_name AS "First Name",LENGTH(first_name) AS "Name Length" FROM employees WHERE first_name LIKE 'A%' OR first_name LIKE 'J%' OR first_name LIKE 'M%' ORDER BY first_name;
125)SELECT first_name AS "First Name",LPAD(CONCAT('$', FORMAT(salary, 2)), 10, '$') AS "SALARY" FROM employees;
126)SELECT LEFT(first_name, 8) AS "First 8 Characters of First Name",CONCAT(REPEAT('$', salary / 1000), FORMAT(salary, 2)) AS "Salary" FROM employees
ORDER BY salary DESC;
127)SELECT employee_id AS "Employee ID",first_name AS "First Name",last_name AS "Last Name",hire_date AS "Hire Date" FROM employees WHERE DAY(hire_date) = 7 OR MONTH(hire_date) = 7;





 





















